@using Services
@using Model
@inject ISimuladorColasEsperaService simulador

<h3>Tabla Tiempos De Espera</h3>

<table class="rz-table">
    <thead>
        <tr class="rz-table-header-row">
            <th class="rz-column-title">Hora</th>
            @foreach (var dato in tiemposDeEspera)
            {
                <th class="rz-column-title">@dato.Nombre</th>
            }
        </tr>
    </thead>
    <tbody>
        @foreach (var key in tiemposDeEspera.First().TiempoEspera.Keys)
        {
            <tr class="rz-table-row">
                <td class="rz-table-cell">@key:00</td>
                @foreach (var dato in tiemposDeEspera)
                {
                    if (dato.TiempoEspera.TryGetValue(key, out var tiempo))
                    {
                        <td class="rz-table-cell">@tiempo min</td>
                    }
                    else
                    {
                        <td class="rz-table-cell">-</td>
                    }
                }
            </tr>
        }
    </tbody>
</table>


@code {
    IEnumerable<DatoEspera> tiemposDeEspera;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
 
        tiemposDeEspera = await simulador.ObtenerDatosEspera(90);
    }
}
