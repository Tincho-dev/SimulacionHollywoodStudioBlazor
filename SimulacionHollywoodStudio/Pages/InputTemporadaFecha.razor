@using Model;

<div class="row">
    <div class="col">
        <h3>Fecha y temporada</h3>
    </div>
</div>

<div class="row d-flex align-items-center justify-content-center mb-3">
    <div class="col-5 text-left">
        <p>Temporada</p>
    </div>
    <div class="col-7">
        <div class="btn-group w-100" role="group" aria-label="Basic example">
            <button type="button" class="btn btn-primary" @onclick="() => TemporadaChanged.InvokeAsync(Temporada.Alta.ToString())">Alta</button>
            <button type="button" class="btn btn-primary" @onclick="() => TemporadaChanged.InvokeAsync(Temporada.Baja.ToString())">Baja</button>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-5 text-left">
        <p>Fecha</p>
    </div>
    <div class="col-7">
        <input @bind="fecha" @bind:event="oninput" type="month" class="form-control" id="fecha" name="fecha" min="2023-01" max="2023-12">
    </div>
</div>

@code {
    [Parameter]
    public EventCallback<string> TemporadaChanged { get; set; }

    [Parameter]
    public EventCallback<DateTime> FechaChanged { get; set; }

    private DateTime fecha;

    private async Task oninput(ChangeEventArgs e)
    {
        fecha = DateTime.Parse(e.Value.ToString());
        await FechaChanged.InvokeAsync(fecha);
    }
}
